version: "3.8"
services:
  akt-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.akt
    working_dir: /app
    ports:
      - "8080:8080"
    command: "./mvnw clean install -DskipTests"
    entrypoint:
      [
        "sh",
        "-c",
        "cd akt; ./mvnw spring-boot:run -Dspring-boot.run.profiles=dev -Dspring-boot.run.jvmArguments=-Ddev.web.security.off=${AKT_UNSECURE:-false}",
      ]
    networks:
      - akt-dev
    volumes:
      - $HOME/.m2:/root/.m2
      - ./backend/akt:/app/akt
    depends_on:
      - akt-postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://akt-postgres:6430/akt-postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVER_PORT=8080
      - AKT_UNSECURE=${AKT_UNSECURE}
  akt-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.akt
      args:
        - GITHUB_REGISTRY_TOKEN=${GITHUB_REGISTRY_TOKEN}
    ports:
      - "4000:4000"
    working_dir: /app/reactjs
    networks:
      - akt-dev
    volumes:
      - ./frontend/packages/akt:/app/reactjs/packages/akt
      - /app/reactjs/node_modules
      - /app/reactjs/packages/akt/node_modules
    environment:
      - GITHUB_REGISTRY_TOKEN=${GITHUB_REGISTRY_TOKEN}

  akt-postgres:
    build: ./backend/akt/db
    container_name: akt-postgres
    ports:
      - "6430:6430"
    networks:
      - akt-dev
    environment:
      - POSTGRES_DB=akt-postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=6430

networks:
  akt-dev: {}

volumes:
  nodemodules: {}
