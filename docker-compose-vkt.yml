version: "3.8"
services:
  vkt-backend:
    build: ./backend/vkt
    ports:
      - "8082:8082"
    command: "./mvnw clean install -DskipTests"
    entrypoint:
      [
        "sh",
        "-c",
        "./mvnw spring-boot:run -Dspring-boot.run.profiles=dev -Dspring-boot.run.jvmArguments=-Ddev.web.security.off=${VKT_UNSECURE:-false}",
      ]
    networks:
      - vkt-dev
    working_dir: /app
    volumes:
      - $HOME/.m2:/root/.m2
      - ./backend/vkt:/app
    depends_on:
      - vkt-postgres
    environment:
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://vkt-postgres:6432/vkt-postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - VKT_UNSECURE=${VKT_UNSECURE}
  vkt-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.vkt
      args:
        - GITHUB_REGISTRY_TOKEN=${GITHUB_REGISTRY_TOKEN}
    ports:
      - "4002:4002"
    working_dir: /app/reactjs
    networks:
      - vkt-dev
    volumes:
      - ./frontend/packages/vkt:/app/reactjs/packages/vkt
      - /app/reactjs/node_modules
      - /app/reactjs/packages/vkt/node_modules
    environment:
      - GITHUB_REGISTRY_TOKEN=${GITHUB_REGISTRY_TOKEN}

  vkt-postgres:
    build: ./backend/vkt/db
    container_name: vkt-postgres
    expose:
      - "6432"
    ports:
      - "6432:6432"
    networks:
      - vkt-dev
    environment:
      - POSTGRES_DB=vkt-postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=6432

networks:
  vkt-dev: {}

volumes:
  nodemodules: {}
