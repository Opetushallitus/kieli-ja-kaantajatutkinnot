version: "3.8"
services:
  otr-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.otr
    working_dir: /app
    ports:
      - "8081:8081"
    command: "./mvnw clean install -DskipTests"
    entrypoint:
      [
        "sh",
        "-c",
        "cd otr; ./mvnw spring-boot:run -Dspring-boot.run.profiles=dev -Dspring-boot.run.jvmArguments=-Ddev.web.security.off=${OTR_UNSECURE:-false}",
      ]
    networks:
      - otr-dev
    volumes:
      - $HOME/.m2:/root/.m2
      - ./backend/otr:/app/otr
    depends_on:
      - otr-postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://otr-postgres:6431/otr-postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVER_PORT=8081
      - OTR_UNSECURE=${OTR_UNSECURE}
  otr-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.otr
      args:
        - GITHUB_REGISTRY_TOKEN=${GITHUB_REGISTRY_TOKEN}
    ports:
      - "4001:4001"
    working_dir: /app/reactjs
    networks:
      - otr-dev
    volumes:
      - ./frontend/packages/otr:/app/reactjs/packages/otr
      - /app/reactjs/node_modules
      - /app/reactjs/packages/otr/node_modules
    environment:
      - GITHUB_REGISTRY_TOKEN=${GITHUB_REGISTRY_TOKEN}

  otr-postgres:
    build: ./backend/otr/db
    container_name: otr-postgres
    ports:
      - "6431:6431"
    networks:
      - otr-dev
    environment:
      - SERVER_PORT=8081
      - POSTGRES_DB=otr-postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=6431

networks:
  otr-dev: {}

volumes:
  nodemodules: {}
