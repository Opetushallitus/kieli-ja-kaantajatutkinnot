--
-- PostgreSQL database dump
--

-- Dumped from database version 12.9 (Debian 12.9-1.pgdg110+1)
-- Dumped by pg_dump version 14.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: email; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email (
    email_id bigint NOT NULL,
    modified_at timestamp without time zone,
    modified_by text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    created_by text,
    deleted_at timestamp without time zone,
    deleted_by text,
    version integer DEFAULT 0 NOT NULL,
    email_type character varying(255) NOT NULL,
    recipient_name text NOT NULL,
    recipient_address text NOT NULL,
    subject text NOT NULL,
    body text NOT NULL,
    sent_at timestamp without time zone,
    ext_id text,
    error text
);


ALTER TABLE public.email OWNER TO postgres;

--
-- Name: email_email_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.email ALTER COLUMN email_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.email_email_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: email_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_type (
    name character varying(255) NOT NULL
);


ALTER TABLE public.email_type OWNER TO postgres;

--
-- Name: interpreter; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.interpreter (
    interpreter_id bigint NOT NULL,
    modified_at timestamp without time zone,
    modified_by text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    created_by text,
    deleted_at timestamp without time zone,
    deleted_by text,
    version integer DEFAULT 0 NOT NULL,
    onr_id character varying(255) NOT NULL,
    permission_to_publish_email boolean NOT NULL,
    permission_to_publish_phone boolean NOT NULL,
    other_contact_information text,
    permission_to_publish_other_contact_information boolean NOT NULL,
    extra_information text
);


ALTER TABLE public.interpreter OWNER TO postgres;

--
-- Name: interpreter_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.interpreter ALTER COLUMN interpreter_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.interpreter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: meeting_date; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.meeting_date (
    meeting_date_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    modified_at timestamp without time zone,
    modified_by text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    created_by text,
    deleted_at timestamp without time zone,
    deleted_by text,
    date date NOT NULL
);


ALTER TABLE public.meeting_date OWNER TO postgres;

--
-- Name: meeting_date_meeting_date_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.meeting_date ALTER COLUMN meeting_date_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.meeting_date_meeting_date_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: qualification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qualification (
    qualification_id bigint NOT NULL,
    interpreter_id bigint NOT NULL,
    modified_at timestamp without time zone,
    modified_by text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    created_by text,
    deleted_at timestamp without time zone,
    deleted_by text,
    version integer DEFAULT 0 NOT NULL,
    permission_to_publish boolean NOT NULL,
    examination_type character varying(255) NOT NULL,
    from_lang character varying(10) NOT NULL,
    to_lang character varying(10) NOT NULL,
    begin_date date NOT NULL,
    end_date date NOT NULL,
    diary_number character varying(255),
    meeting_date_id bigint NOT NULL,
    CONSTRAINT ck_qualification_begin_date_end_date CHECK ((begin_date < end_date)),
    CONSTRAINT ck_qualification_from_lang CHECK (((from_lang)::text = 'FI'::text)),
    CONSTRAINT ck_qualification_from_lang_to_lang CHECK (((from_lang)::text <> (to_lang)::text))
);


ALTER TABLE public.qualification OWNER TO postgres;

--
-- Name: qualification_examination_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qualification_examination_type (
    name character varying(255) NOT NULL
);


ALTER TABLE public.qualification_examination_type OWNER TO postgres;

--
-- Name: qualification_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.qualification ALTER COLUMN qualification_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.qualification_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: qualification_reminder; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.qualification_reminder (
    qualification_reminder_id bigint NOT NULL,
    modified_at timestamp without time zone,
    modified_by text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    created_by text,
    deleted_at timestamp without time zone,
    deleted_by text,
    version integer DEFAULT 0 NOT NULL,
    qualification_id bigint NOT NULL,
    email_id bigint NOT NULL
);


ALTER TABLE public.qualification_reminder OWNER TO postgres;

--
-- Name: qualification_reminder_qualification_reminder_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.qualification_reminder ALTER COLUMN qualification_reminder_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.qualification_reminder_qualification_reminder_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: region; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.region (
    region_id bigint NOT NULL,
    interpreter_id bigint NOT NULL,
    code character varying(16) NOT NULL,
    modified_at timestamp without time zone,
    modified_by text,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    created_by text,
    deleted_at timestamp without time zone,
    deleted_by text,
    version integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.region OWNER TO postgres;

--
-- Name: region_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.region ALTER COLUMN region_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.region_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shedlock; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shedlock (
    name character varying(64) NOT NULL,
    lock_until timestamp without time zone NOT NULL,
    locked_at timestamp without time zone NOT NULL,
    locked_by character varying(255) NOT NULL
);


ALTER TABLE public.shedlock OWNER TO postgres;

--
-- Name: email email_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email
    ADD CONSTRAINT email_pkey PRIMARY KEY (email_id);


--
-- Name: email_type email_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_type
    ADD CONSTRAINT email_type_pkey PRIMARY KEY (name);


--
-- Name: interpreter interpreter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.interpreter
    ADD CONSTRAINT interpreter_pkey PRIMARY KEY (interpreter_id);


--
-- Name: meeting_date meeting_date_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.meeting_date
    ADD CONSTRAINT meeting_date_pkey PRIMARY KEY (meeting_date_id);


--
-- Name: qualification_examination_type qualification_examination_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification_examination_type
    ADD CONSTRAINT qualification_examination_type_pkey PRIMARY KEY (name);


--
-- Name: qualification qualification_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification
    ADD CONSTRAINT qualification_pkey PRIMARY KEY (qualification_id);


--
-- Name: qualification_reminder qualification_reminder_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification_reminder
    ADD CONSTRAINT qualification_reminder_pkey PRIMARY KEY (qualification_reminder_id);


--
-- Name: region region_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.region
    ADD CONSTRAINT region_pkey PRIMARY KEY (region_id);


--
-- Name: shedlock shedlock_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shedlock
    ADD CONSTRAINT shedlock_pkey PRIMARY KEY (name);


--
-- Name: interpreter uk_interpreter_onr_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.interpreter
    ADD CONSTRAINT uk_interpreter_onr_id UNIQUE (onr_id);


--
-- Name: meeting_date uk_meeting_date_date; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.meeting_date
    ADD CONSTRAINT uk_meeting_date_date UNIQUE (date);


--
-- Name: region uk_region_interpreter_code; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.region
    ADD CONSTRAINT uk_region_interpreter_code UNIQUE (interpreter_id, code);


--
-- Name: email fk_email_email_type; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email
    ADD CONSTRAINT fk_email_email_type FOREIGN KEY (email_type) REFERENCES public.email_type(name);


--
-- Name: qualification fk_qualification_examination_type; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification
    ADD CONSTRAINT fk_qualification_examination_type FOREIGN KEY (examination_type) REFERENCES public.qualification_examination_type(name);


--
-- Name: qualification fk_qualification_interpreter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification
    ADD CONSTRAINT fk_qualification_interpreter FOREIGN KEY (interpreter_id) REFERENCES public.interpreter(interpreter_id);


--
-- Name: qualification fk_qualification_meeting_date; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification
    ADD CONSTRAINT fk_qualification_meeting_date FOREIGN KEY (meeting_date_id) REFERENCES public.meeting_date(meeting_date_id);


--
-- Name: qualification_reminder fk_qualification_reminder_email; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification_reminder
    ADD CONSTRAINT fk_qualification_reminder_email FOREIGN KEY (email_id) REFERENCES public.email(email_id);


--
-- Name: qualification_reminder fk_qualification_reminder_qualification; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.qualification_reminder
    ADD CONSTRAINT fk_qualification_reminder_qualification FOREIGN KEY (qualification_id) REFERENCES public.qualification(qualification_id);


--
-- Name: region fk_region_interpreter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.region
    ADD CONSTRAINT fk_region_interpreter FOREIGN KEY (interpreter_id) REFERENCES public.interpreter(interpreter_id);


--
-- PostgreSQL database dump complete
--

