--
-- PostgreSQL database dump
--

-- Dumped from database version 12.9 (Debian 12.9-1.pgdg110+1)
-- Dumped by pg_dump version 12.9 (Debian 12.9-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: email; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email (
    email_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    created_by text,
    modified_by text,
    deleted_by text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    modified_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    email_type character varying(255) NOT NULL,
    recipient_name text NOT NULL,
    recipient_address text NOT NULL,
    subject text NOT NULL,
    body text NOT NULL,
    sent_at timestamp with time zone,
    ext_id text,
    error text
);


ALTER TABLE public.email OWNER TO postgres;

--
-- Name: email_attachment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_attachment (
    email_attachment_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    created_by text,
    modified_by text,
    deleted_by text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    modified_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    email_id bigint NOT NULL,
    name character varying(255) NOT NULL,
    content_type character varying(255) NOT NULL,
    data bytea NOT NULL
);


ALTER TABLE public.email_attachment OWNER TO postgres;

--
-- Name: email_attachment_email_attachment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.email_attachment ALTER COLUMN email_attachment_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.email_attachment_email_attachment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: email_email_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.email ALTER COLUMN email_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.email_email_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: email_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.email_type (
    name character varying(255) NOT NULL
);


ALTER TABLE public.email_type OWNER TO postgres;

--
-- Name: enrollment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.enrollment (
    enrollment_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    created_by text,
    modified_by text,
    deleted_by text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    modified_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    exam_event_id bigint NOT NULL,
    person_id bigint NOT NULL,
    skill_oral boolean NOT NULL,
    skill_textual boolean NOT NULL,
    skill_understanding boolean NOT NULL,
    partial_exam_speaking boolean NOT NULL,
    partial_exam_speech_comprehension boolean NOT NULL,
    partial_exam_writing boolean NOT NULL,
    partial_exam_reading_comprehension boolean NOT NULL,
    status character varying(255) NOT NULL,
    previous_enrollment text,
    digital_certificate_consent boolean NOT NULL,
    email text NOT NULL,
    phone_number text NOT NULL,
    street text,
    postal_code text,
    town text,
    country text,
    payment_link_hash character varying(255),
    payment_link_expires_at timestamp with time zone,
    is_anonymized boolean NOT NULL
);


ALTER TABLE public.enrollment OWNER TO postgres;

--
-- Name: enrollment_enrollment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.enrollment ALTER COLUMN enrollment_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.enrollment_enrollment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: enrollment_status; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.enrollment_status (
    name character varying(255) NOT NULL
);


ALTER TABLE public.enrollment_status OWNER TO postgres;

--
-- Name: exam_event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.exam_event (
    exam_event_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    created_by text,
    modified_by text,
    deleted_by text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    modified_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    language character varying(10) NOT NULL,
    level character varying(255) NOT NULL,
    date date NOT NULL,
    registration_closes date NOT NULL,
    is_hidden boolean NOT NULL,
    max_participants integer NOT NULL,
    CONSTRAINT ck_exam_event_max_participants CHECK ((max_participants >= 0)),
    CONSTRAINT ck_exam_event_registration_closes CHECK ((registration_closes <= date))
);


ALTER TABLE public.exam_event OWNER TO postgres;

--
-- Name: exam_event_exam_event_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.exam_event ALTER COLUMN exam_event_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.exam_event_exam_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: exam_language; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.exam_language (
    name character varying(10) NOT NULL
);


ALTER TABLE public.exam_language OWNER TO postgres;

--
-- Name: exam_level; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.exam_level (
    name character varying(255) NOT NULL
);


ALTER TABLE public.exam_level OWNER TO postgres;

--
-- Name: payment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.payment (
    payment_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    created_by text,
    modified_by text,
    deleted_by text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    modified_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    enrollment_id bigint NOT NULL,
    amount integer NOT NULL,
    transaction_id text,
    reference text,
    payment_url text,
    payment_status text,
    refunded_at timestamp with time zone
);


ALTER TABLE public.payment OWNER TO postgres;

--
-- Name: payment_payment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.payment ALTER COLUMN payment_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.payment_payment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: person; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.person (
    person_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    created_by text,
    modified_by text,
    deleted_by text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    modified_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    last_name text NOT NULL,
    first_name text NOT NULL,
    oid character varying(255),
    other_identifier character varying(1024),
    latest_identified_at timestamp with time zone NOT NULL
);


ALTER TABLE public.person OWNER TO postgres;

--
-- Name: person_person_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.person ALTER COLUMN person_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.person_person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reservation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reservation (
    reservation_id bigint NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    created_by text,
    modified_by text,
    deleted_by text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    modified_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    exam_event_id bigint NOT NULL,
    person_id bigint NOT NULL,
    expires_at timestamp with time zone NOT NULL,
    renewed_at timestamp with time zone
);


ALTER TABLE public.reservation OWNER TO postgres;

--
-- Name: reservation_reservation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reservation ALTER COLUMN reservation_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reservation_reservation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shedlock; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shedlock (
    name character varying(64) NOT NULL,
    lock_until timestamp without time zone NOT NULL,
    locked_at timestamp without time zone NOT NULL,
    locked_by character varying(255) NOT NULL
);


ALTER TABLE public.shedlock OWNER TO postgres;

--
-- Name: spring_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.spring_session (
    primary_id character(36) NOT NULL,
    session_id character(36) NOT NULL,
    creation_time bigint NOT NULL,
    last_access_time bigint NOT NULL,
    max_inactive_interval integer NOT NULL,
    expiry_time bigint NOT NULL,
    principal_name character varying(100)
);


ALTER TABLE public.spring_session OWNER TO postgres;

--
-- Name: spring_session_attributes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.spring_session_attributes (
    session_primary_id character(36) NOT NULL,
    attribute_name character varying(200) NOT NULL,
    attribute_bytes bytea NOT NULL
);


ALTER TABLE public.spring_session_attributes OWNER TO postgres;

--
-- Name: email_attachment email_attachment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_attachment
    ADD CONSTRAINT email_attachment_pkey PRIMARY KEY (email_attachment_id);


--
-- Name: email email_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email
    ADD CONSTRAINT email_pkey PRIMARY KEY (email_id);


--
-- Name: email_type email_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_type
    ADD CONSTRAINT email_type_pkey PRIMARY KEY (name);


--
-- Name: enrollment enrollment_payment_link_hash_uniq_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.enrollment
    ADD CONSTRAINT enrollment_payment_link_hash_uniq_idx UNIQUE (payment_link_hash);


--
-- Name: enrollment enrollment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.enrollment
    ADD CONSTRAINT enrollment_pkey PRIMARY KEY (enrollment_id);


--
-- Name: enrollment_status enrollment_status_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.enrollment_status
    ADD CONSTRAINT enrollment_status_pkey PRIMARY KEY (name);


--
-- Name: exam_event exam_event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exam_event
    ADD CONSTRAINT exam_event_pkey PRIMARY KEY (exam_event_id);


--
-- Name: exam_language exam_language_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exam_language
    ADD CONSTRAINT exam_language_pkey PRIMARY KEY (name);


--
-- Name: exam_level exam_level_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exam_level
    ADD CONSTRAINT exam_level_pkey PRIMARY KEY (name);


--
-- Name: payment payment_id_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT payment_id_pkey PRIMARY KEY (payment_id);


--
-- Name: person person_oid_uniq_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_oid_uniq_idx UNIQUE (oid);


--
-- Name: person person_other_id_uniq_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_other_id_uniq_idx UNIQUE (other_identifier);


--
-- Name: person person_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_pkey PRIMARY KEY (person_id);


--
-- Name: reservation reservation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reservation
    ADD CONSTRAINT reservation_pkey PRIMARY KEY (reservation_id);


--
-- Name: shedlock shedlock_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shedlock
    ADD CONSTRAINT shedlock_pkey PRIMARY KEY (name);


--
-- Name: spring_session_attributes spring_session_attributes_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.spring_session_attributes
    ADD CONSTRAINT spring_session_attributes_pk PRIMARY KEY (session_primary_id, attribute_name);


--
-- Name: spring_session spring_session_id_idx; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.spring_session
    ADD CONSTRAINT spring_session_id_idx UNIQUE (session_id);


--
-- Name: spring_session spring_session_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.spring_session
    ADD CONSTRAINT spring_session_pk PRIMARY KEY (primary_id);


--
-- Name: enrollment uk_enrollment_exam_event_person; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.enrollment
    ADD CONSTRAINT uk_enrollment_exam_event_person UNIQUE (exam_event_id, person_id);


--
-- Name: exam_event uk_exam_event_language_level_date; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exam_event
    ADD CONSTRAINT uk_exam_event_language_level_date UNIQUE (language, level, date);


--
-- Name: reservation uk_reservation_exam_event_person; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reservation
    ADD CONSTRAINT uk_reservation_exam_event_person UNIQUE (exam_event_id, person_id);


--
-- Name: spring_session_expires_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX spring_session_expires_idx ON public.spring_session USING btree (expiry_time);


--
-- Name: spring_session_principal_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX spring_session_principal_idx ON public.spring_session USING btree (principal_name);


--
-- Name: email_attachment fk_email_attachment_email; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email_attachment
    ADD CONSTRAINT fk_email_attachment_email FOREIGN KEY (email_id) REFERENCES public.email(email_id);


--
-- Name: email fk_email_email_type; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.email
    ADD CONSTRAINT fk_email_email_type FOREIGN KEY (email_type) REFERENCES public.email_type(name);


--
-- Name: enrollment fk_enrollment_exam_event; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.enrollment
    ADD CONSTRAINT fk_enrollment_exam_event FOREIGN KEY (exam_event_id) REFERENCES public.exam_event(exam_event_id);


--
-- Name: enrollment fk_enrollment_person; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.enrollment
    ADD CONSTRAINT fk_enrollment_person FOREIGN KEY (person_id) REFERENCES public.person(person_id);


--
-- Name: enrollment fk_enrollment_status; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.enrollment
    ADD CONSTRAINT fk_enrollment_status FOREIGN KEY (status) REFERENCES public.enrollment_status(name);


--
-- Name: exam_event fk_exam_event_language; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exam_event
    ADD CONSTRAINT fk_exam_event_language FOREIGN KEY (language) REFERENCES public.exam_language(name);


--
-- Name: exam_event fk_exam_event_level; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.exam_event
    ADD CONSTRAINT fk_exam_event_level FOREIGN KEY (level) REFERENCES public.exam_level(name);


--
-- Name: payment fk_payment_enrollment; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment
    ADD CONSTRAINT fk_payment_enrollment FOREIGN KEY (enrollment_id) REFERENCES public.enrollment(enrollment_id);


--
-- Name: reservation fk_reservation_exam_event; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reservation
    ADD CONSTRAINT fk_reservation_exam_event FOREIGN KEY (exam_event_id) REFERENCES public.exam_event(exam_event_id);


--
-- Name: reservation fk_reservation_person; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reservation
    ADD CONSTRAINT fk_reservation_person FOREIGN KEY (person_id) REFERENCES public.person(person_id);


--
-- Name: spring_session_attributes spring_session_attributes_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.spring_session_attributes
    ADD CONSTRAINT spring_session_attributes_fk FOREIGN KEY (session_primary_id) REFERENCES public.spring_session(primary_id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

